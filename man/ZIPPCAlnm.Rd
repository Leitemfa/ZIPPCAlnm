% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ZIPPCAlnm.R
\name{ZIPPCAlnm}
\alias{ZIPPCAlnm}
\title{ZIPPCAlnm}
\usage{
ZIPPCAlnm(X, d_choice = FALSE)
}
\arguments{
\item{X}{count matrix of observations.}

\item{d_choice}{logical, if TRUE the rank or number of factors, or dimension after dimensional reduction, will be chosen from 1 to 5. Defaults to FALSE.}
}
\value{
\item{VLB }{ variational lower bound of log likelihood}
 \item{lvs}{list of latent variables
 \itemize{
   \item{pi }{ the probabilities of excess zeros}
   \item{factor_scores }{ coordinates or factor scores in low-dimensional subspace}
   }}
 \item{params}{list of model parameters
 \itemize{
   \item{factor_coefs_j }{ coefficients of latent variables fator scores or factor loadings}
   \item{factor_coefs_0 }{ taxon-specific intercepts}
   }}
 \item{Q }{ the underlying composition of microbiome data}
 \item{bic }{ if d_choice is TRUE, the rank or factors, or dimension, will be chosen with Bayesian information criterion (BIC)}
}
\description{
Zero-Inflated Probabilistic PCA framework with logistical normal multinomial distribution (ZIPPCA-LNM),
that extends probabilistic PCA from the Gaussian setting to multivariate abundance data, and an empirical Bayes approach was
proposed for inferring microbial compositions. An efficient VA algorithm, classification VA, has been developed for fitting this model.
}
\examples{
n.n = 50
n.w = 100
n.factors = 2
set.seed(1)
si <- diag(n.factors)
me <- c(0,0)
f <- matrix(0,nrow = n.n, ncol = n.factors)
for(i in 1:n.n){
 #f[i,] <- rnorm(n.factors, mean = 0, sd = 1)
 f[i,] <- mvrnorm(1,me,si)
}
betaj <- matrix(0,nrow = n.w, ncol = n.factors)
for(j in 1:n.w){
  betaj[j,] <- runif(n.factors,-3.5,3.5)
}
beta0 <- rep(2,n.w)
l <- matrix(beta0,n.n,n.w,byrow=TRUE)+f \%*\%  t(betaj)
eta_j <- rep(0.25,n.w)
z <- matrix(0,n.n,n.w,byrow = TRUE)
for(i in 1:n.n){
  z[i,] <- rbinom(n.w, size=1, prob=eta_j)
}
sum <- rowSums(exp(l))
Qn <- exp(l)/sum
X <- matrix(0,n.n,n.w,byrow = TRUE)
for(i in 1:n.n){
  X[i,] <- rmultinom(1, size = runif(1,800,1000), prob = Qn[i,])
}
X[z==1] <-0
zerorow <- which(rowSums(X)==0)
if(length(zerorow) >0 ){
  X <- X[-zerorow,];Qn <- Qn[-zerorow,];
}
zerocol <- which(colSums(X)==0)
if(length(zerocol) >0 ){
  X <- X[,-zerocol];Qn <- Qn[,-zerocol];
}
result <- ZIPPCAlnm::ZIPPCAlnm(X,d_choice=FALSE)
}
